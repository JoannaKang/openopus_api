<?
  include_once ("../../../lib/inc.php");

  // listing genres

  $sql = "select genre, composer.epoch, composer.id as composer, composer.name from composer, work where work.composer_id = composer.id and composer.id = '{$_REQUEST["composer"]}' group by genre order by genre asc";
  $genres = mysqlfetch ($mysql, $sql);

  if (!$genres)
  {
    // if no genres exist, return an error

    $apireturn["status"] = Array ("success"=>"false", "error"=>"No genres found");
  }
  else
  { 
    // listing genres

    $apireturn["status"] = Array ("success"=>"true", "source"=>"db");
    $apireturn["composer"] = Array
      (
        "id"=>$genres[0]["composer"],
        "name"=>$genres[0]["name"],
        "epoch"=>$genres[0]["epoch"]
      );
    $apireturn["genres"] = arraykeepvalues ($genres, ["genre"]);

    // are there popular or recommended works?

    $sql = "select count(id) qtd, popular, recommended from work where composer_id = '{$_REQUEST["composer"]}' and (popular='1' or recommended='1') group by popular, recommended";
    $pops = mysqlfetch ($mysql, $sql);

    foreach ($pops as $pop)
    {
      if ($pop["recommended"]) array_unshift ($apireturn["genres"], "Recommended");
      if ($pop["popular"]) array_unshift ($apireturn["genres"], "Popular");
    }

    $apireturn["genres"] = array_values (array_unique ($apireturn["genres"]));
    $apireturn["status"]["rows"] = sizeof ($apireturn["genres"]);
  }

  echo savecache ("/genre/list/composer/{$_REQUEST["composer"]}.json", apireturn ($apireturn));

